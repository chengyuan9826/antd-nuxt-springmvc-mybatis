<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC   
    "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.report.dao.user.UserMapper">
	<resultMap type="com.report.model.user.User" id="BaseUserResultMap">
		<result column="id" property="id" />
		<result column="user_login" property="userLogin" />
		<result column="user_pass" property="userPass" />
		<result column="display_name" property="displayName" />
		<result column="user_status" property="userStatus" />
		<result column="count" property="count" />
		<result column="fine_count" property="fineCount" />
		<result column="psd_count" property="psdCount" />
		<result column="jpg_count" property="jpgCount" />

		<!--<collection property="roleList" column="user_id" javaType="ArrayList"-->
					<!--ofType="com.report.model.user.Role" select="selectRoleByUserId" />-->
	</resultMap>

	<resultMap type="com.report.model.user.Role" id="RoleMap">
		<result column="role_id" property="id" />
		<result column="role" property="role" />
	</resultMap>

	<!-- 根据用户ID查询对应的角色信息 -->
	<select id="selectRoleByUserId" parameterType="java.lang.Integer"
		resultMap="RoleMap">
		select b.id role_id,b.role from user_role a,role b where
		a.role_id = b.id
		and a.user_id = #{id}
	</select>
	<!-- 根据用户名查询一个用户的信息 -->
	<select id="queryUserByUsername" resultMap="BaseUserResultMap">
		<!-- select -->
		<!-- a.*,b.role_id,c.role from -->
		<!-- user_login a -->
		<!-- LEFT JOIN user_role b -->
		<!-- on a.id = -->
		<!-- b.user_id -->
		<!-- LEFT JOIN role c -->
		<!-- on b.role_id = c.id -->
		<!-- where -->
		<!-- a.username = -->
		<!-- #{username} -->
		SELECT * from wp_users a where a.user_login = #{username} and a.user_status = 0
	</select>

	<!-- 查询所有用户的数量 -->
	<select id="queryUserCount" resultType="java.lang.Integer"
		parameterType="java.util.Map">
		SELECT
		count(0)
		FROM
		user_login a
		<if test="roles !=null">
			join user_role c on a.id = c.user_id and c.role_id in
			<foreach collection="roles" item="item" open="(" close=")"
				separator=",">
				#{item}
			</foreach>
		</if>
		LEFT JOIN
		user_profile d ON a.id =
		d.user_id
		where a.delete_flag = 0
		<if test="user.username !=null">
			and
			a.username like concat('%',#{user.username},'%')
		</if>
		<if test="user.actualName!=null">
			and d.actual_name like concat('%',#{user.actualName},'%')
		</if>
	</select>

	<!-- 查询所有用户列表 -->
	<select id="queryAllUser" resultMap="BaseUserResultMap"
		parameterType="java.util.Map">
		SELECT
		a.username,
		a.id user_id ,
		d.actual_name,
		d.sex,
		d.mobile,d.email,d.address,d.remark
		FROM
		user_login a
		<if test="roles !=null">
			join user_role c on a.id = c.user_id and c.role_id in
			<foreach collection="roles" item="item" open="(" close=")"
				separator=",">
				#{item}
			</foreach>
		</if>
		LEFT JOIN
		user_profile d ON a.id =
		d.user_id
		where a.delete_flag = 0
		<if test="user.username !=null">
			and
			a.username like concat('%',#{user.username},'%')
		</if>
		<if test="user.actualName!=null">
			and d.actual_name like concat('%',#{user.actualName},'%')
		</if>

		order by a.id desc
		limit
		#{limit}
		offset #{offset}
	</select>

	<!-- 删除一个用户，从user_login表 -->
	<delete id="deleteUserLogin" parameterType="java.lang.Integer">
		delete from
		user_login where id = #{id}
	</delete>

	<!-- 删除一个用户的资料 -->
	<delete id="deleteUserProfile" parameterType="java.lang.Integer">
		delete from
		user_profile where user_id = #{id}
	</delete>

	<!-- 删除一个用户的角色关系 -->
	<delete id="deleteUserRole" parameterType="java.lang.Integer">
		delete from user_role
		where user_id = #{id}
	</delete>

	<!-- 在user_login表中保存用户 -->
	<insert id="saveUserAccount" parameterType="com.report.model.user.User"
		useGeneratedKeys="true" keyProperty="id">
		insert into user_login
		(username,password
		<if test="id!=null">,id</if>
		)
		values(#{username},#{password}
		<if test="id!=null">,#{id}</if>
		)
	</insert>

	<!-- 在user_profile表中保存用户 -->
	<insert id="saveUserProfile" parameterType="com.report.model.user.User">
		INSERT into user_profile (
		<trim suffixOverrides=",">
			user_id,
			<if test="actualName != null ">actual_name,</if>
			<if test="sex != null ">sex,</if>
			<if test="mobile != null ">mobile,</if>
			<if test="email != null ">email,</if>
			<if test="address != null ">address,</if>
			<if test="remark != null ">remark,</if>
		</trim>
		)VALUES(
		<trim suffixOverrides=",">
			#{id},
			<if test="actualName != null ">#{actualName},</if>
			<if test="sex != null ">#{sex},</if>
			<if test="mobile != null ">#{mobile},</if>
			<if test="email != null ">#{email},</if>
			<if test="address != null ">#{address},</if>
			<if test="remark != null ">#{remark},</if>
		</trim>
		)
	</insert>

	<!-- 在用户-角色关系表中保存用户角色 -->
	<insert id="saveUserRole" parameterType="com.report.model.user.User">
		<foreach collection="roleList" item="role" separator=";">
			insert
			into
			user_role (user_id,role_id) values(#{id},#{role.id})
		</foreach>
	</insert>

	<!-- 查询所有角色列表 -->
	<select id="queryRoleList" resultMap="RoleMap">
		select a.id role_id,a.role
		from role a
	</select>

	<!-- 根绝ID查询一个用户资料 -->
	<select id="queryUserById" parameterType="java.lang.Integer"
		resultMap="BaseUserResultMap">
		SELECT
		a.username,a.password,d.*
		FROM
		user_login a
		LEFT JOIN
		user_profile d ON a.id =
		d.user_id
		where a.id = #{userId}
	</select>

	<!-- 插入一个用户角色 -->
	<insert id="insertUserRole">
		insert into user_role (user_id,role_id) values
		(#{0},#{1})
	</insert>

</mapper> 