<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.report.dao.report.ReportMapper">
    <resultMap type="com.report.model.report.Report" id="BaseReportResultMap">
        <result column="user_id" property="userId"/>
        <result column="username" property="username"/>
        <result column="count" property="count"/>
        <result column="file_type" property="fileType"/>
    </resultMap>

    <resultMap type="com.report.model.wp.Post" id="PostMap">
        <result column="id" property="id"/>
        <result column="post_author" property="post_author"/>
        <result column="post_date" property="post_date"/>
        <result column="post_title" property="post_title"/>
        <result column="post_modified" property="post_modified"/>
        <result column="display_name" property="display_name"/>
        <result column="tag" property="tag"/>
    </resultMap>


    <!-- 查询报表 -->
    <select id="queryReport" parameterType="java.util.Map"
            resultMap="BaseReportResultMap">
        SELECT
        t.user_id,
        t.username,
        count( 0 ) count
        FROM
        (
        SELECT DISTINCT
        a.id post_id,
        b.id user_id,
        b.display_name username,
        <if test="fileType !=null">#{fileType} file_type,
        </if>
        count( 0 ) count
        FROM
        wp_posts a,
        wp_users b,
        wp_term_relationships c,
        wp_term_taxonomy d,
        wp_terms e
        WHERE
        a. post_status = 'publish'
        AND d.taxonomy = 'category'
        AND a.post_author = b.id
        AND a.id = c.object_id
        AND c.term_taxonomy_id = d.term_taxonomy_id
        AND d.term_id = e.term_id
        <if test="fileType !=null">
            AND (a.post_content LIKE concat('%&lt;a%.',#{fileType},'">%') AND e.term_id not in (31,30,32))
        </if>
        <if test="notLikeUserName !=null">
            AND b.display_name NOT LIKE CONCAT('%',#{notLikeUserName},'%')
        </if>
        <if test="likeUserName !=null">
            AND b.display_name LIKE CONCAT('%',#{likeUserName},'%')
        </if>
        <if test="startTime !=null">
            AND a.post_date >= #{startTime}
        </if>
        <if test="endTime !=null">
            AND a.post_date &lt;= #{endTime}
        </if>
        <if test="termId !=null">
            AND e.term_id = #{termId}
        </if>
        <if test="likeUserName !=null">
            AND b.display_name LIKE CONCAT('%',#{likeUserName},'%')
        </if>
        GROUP BY
        a.id,
        b.ID,b.display_name
        HAVING 1=1
        <if test="minNum !=null">
            AND count <![CDATA[>]]> #{minNum}
        </if>
        <if test="maxNum !=null">
            AND count <![CDATA[<]]> #{maxNum}
        </if>

        ) t
        GROUP BY
        t.user_id,
        t.username
        HAVING
        1 = 1
    </select>

    <!--插入一篇文章-->
    <insert id="insertPost" parameterType="com.report.model.wp.Post" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO wp_posts ( post_author, post_date, post_date_gmt, post_content, post_title, post_excerpt, post_status, post_name, post_modified, post_modified_gmt, post_parent, to_ping, pinged, post_content_filtered,post_type,post_mime_type )
        VALUES
        (#{post_author},#{post_date},#{post_date_gmt},#{post_content},#{post_title},#{post_excerpt},#{post_status},#{post_name},#{post_modified},#{post_modified_gmt},#{post_parent},#{to_ping},#{pinged},#{post_content_filtered},#{post_type},#{post_mime_type});
    </insert>
    <!--插入termrelations-->
    <insert id="insertTermRelations" parameterType="java.util.Map">
        INSERT INTO wp_term_relationships ( object_id, term_taxonomy_id, term_order )
        VALUES
	    (#{post_id}, #{term_id}, 0);
    </insert>
    <!--插入metadata-->
    <insert id="insertPostMeta" parameterType="com.report.model.wp.PostMeta">
        INSERT INTO wp_postmeta (  post_id, meta_key, meta_value )
        VALUES
	    (#{post_id},#{meta_key},#{meta_value})
    </insert>

    <!--批量更新一个用户的所有文章-->
    <insert id="batchPublish">
        UPDATE wp_posts set post_status = 'publish' where post_author = (select a.id from wp_users a where a.user_login = #{0}) and post_status = 'pending';
    </insert>

    <!--查询列表-->
    <select id="queryPostList" parameterType="java.util.Map" resultMap="PostMap">
        SELECT a.id,a.post_author,a.post_date,a.post_title,a.post_modified,u.display_name, GROUP_CONCAT(d.`name`) tag
        from wp_posts a,wp_term_relationships b,wp_term_taxonomy c, wp_terms d, wp_users u
        where a.id = b.object_id
        and a.post_author = u.id
        and b.term_taxonomy_id = c.term_taxonomy_id
        and c.term_id = d.term_id
        and a.post_status = 'publish'
        <if test="keyWord != null">
            and
            (d.`name` like concat('%',#{keyWord},'%') -- 标签查询
            or a.post_title like concat('%',#{keyWord},'%') -- 标题查询
            )
        </if>
        <if test="postAuthor != null">
            and a.post_author = #{postAuthor} -- 作者ID精确查询
        </if>
        <if test="termId != null">
            and d.term_id = #{termId} -- 标签ID精确查询
        </if>
        GROUP BY a.id
        order by a.post_date desc
        limit #{limit}
        offset #{offset}
    </select>

    <!--查询文章详情-->
    <select id="queryPostDetail" resultMap="PostMap">
      SELECT a.id,a.post_author,a.post_content,a.post_date,a.post_title,a.post_modified,u.display_name, GROUP_CONCAT(d.`name`) tag from wp_posts a,wp_term_relationships b,wp_term_taxonomy c, wp_terms d, wp_users u
        where a.id = b.object_id
        and a.post_author = u.id
        and   b.term_taxonomy_id = c.term_taxonomy_id
        and c.term_id = d.term_id
        and a.id= #{postId}
    </select>

    <!--根据分类名称查找对应的term_taxonomy_id-->
    <select id="queryTermInfo" parameterType="java.util.Map" resultType="java.util.Map">
        select a.term_taxonomy_id,a.term_id,a.taxonomy,a.parent,a.count,b.name,b.slug,b.term_group,b.term_order from
        wp_term_taxonomy a,wp_terms b
        where a.term_id = b.term_id
        <if test="slug!=null">
            and b.slug = #{slug}
        </if>
        <if test="termId!=null">
            and b.term_id=#{termId}
        </if>
    </select>
</mapper>